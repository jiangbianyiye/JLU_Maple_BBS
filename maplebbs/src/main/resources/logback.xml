<?xml version="1.0" encoding="UTF-8"?>
<!--配置更改自动更新 每60s扫描一遍 debug="false不打印logback容器信息-->
<configuration scan="true"
               scanPeriod="60 seconds" debug="false">
    <!--定义参数常量-->
    <property name="log.level" value="debug"/>
    <!--日志保存时间-->
    <property name="log.maxHistory" value="30"/>
    <!--日志保存到tomcat目录-->
    <property name="log.filePath" value="${catalina.base}/logs/webapps"/>
    <!-- %d是格式 时间 线程 %-5缩进5位 级别 那个类 信息-->
    <property name="log.pattern"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}-%msg%n"/>
    <!--输出到控制台-->
    <appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <!--日志信息转换成字符串 输出-->
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
    </appender>
    <!--DEBUG-->
    <appender name="debugAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件路径-->
        <file>${log.filePath}/debug.log</file>
        <!--滚动策略 基于时间 天-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件名称-->
            <fileNamePattern>
                ${log.filePath}/debug/debug.%d{yyyy-MM-dd}.log.gz
            </fileNamePattern>
            <!--文件最大保存历史数量 30天-->
            <maxHistory>
                ${log.maxHistory}
            </maxHistory>
        </rollingPolicy>
        <!--日志信息转字符串 输出-->
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <!--过滤非DEBUG级别-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <!--DENY 否定 过滤掉-->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--INFO-->
    <appender name="infoAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件路径 这个文件存满后存到滚动策略的子文件-->
        <file>${log.filePath}/info.log</file>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件名称-->
            <fileNamePattern>
                ${log.filePath}/info/info.%d{yyyy-MM-dd}.log.gz
            </fileNamePattern>
            <!--文件最大保存历史数量-->
            <maxHistory>
                ${log.maxHistory}
            </maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--ERROR-->
    <appender name="errorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件路径-->
        <file>${log.filePath}/error.log</file>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件名称-->
            <fileNamePattern>
                ${log.filePath}/error/error.%d{yyyy-MM-dd}.log.gz
            </fileNamePattern>
            <!--文件最大保存历史数量-->
            <maxHistory>
                ${log.maxHistory}
            </maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--存日志对象并指定
    name=jlu.maplebbs包下的类会写到日志 -->
    <logger name="jlu.maplebbs" level="${log.level}" activity="true">
        <appender-ref ref="debugAppender"/>
        <appender-ref ref="infoAppender"/>
        <appender-ref ref="errorAppender"/>
    </logger>
    <!--根logger 与info相关打印到控制台-->
    <root level="info">
        <appender-ref ref="consoleAppender"/>
    </root>
</configuration>